import Head from 'next/head'
import { useState, useEffect } from 'react'
import styles from '../styles/Home.module.css'

import IPSearchbar from '../components/ipSearchbar/ipSearchbar'
import IPInfos from '../components/ipInfos/ipInfos'
import IPLoaction from '../components/ipLocation/ipLocation'
import AlertBox from '../components/alertBox/alertBox'

export default function Home() {
  const [IPLocationData, setIPLocationData] = useState({
    ip: "8.8.8.8",
    location: "Mountain View",
    timezone: "UTC -08:00",
    isp: "Google LCC",
    position: {
      lat: 37.38605,
      lng: -122.08385
    }
  })

  const [error, setError] = useState({
    state: false,
    message: ""
  })

  const searchIPlocationData = async (ip) => {
    try {
      const data = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=at_PSqAceWFJWfOHr92xwFXrVn1LkkCz&ipAddress=${ip}`).then((response) => {
        if (response.ok) {
          return response.json()
        }
      })
      if (data) {        
        setIPLocationData(IPData => ({
          ip: data.ip,
          location: data.location.city,
          timezone: "UTC "+data.location.timezone,
          isp: data.isp,
          position: {
            lat: parseFloat(data.location.lat),
            lng: parseFloat(data.location.lng)
          }
        }))
      } else {
        throw new Error("Sorry we have reached the Api free usage limit")
      }
    } catch (e) {
      setError(error => ({state: true, message: e}))
    }
  }
  
  const searchUserIPlocationData = async () => {
    try {
      const { ip: userIp } = await fetch('https://api.ipify.org?format=json').then((response) => response.json())

      if (userIp) {
        await searchIPlocationData(userIp)
      }
    } catch(e) {
      setError(error => ({state: true, message: e}))
    }
    
  }

  const showFormatError = () => {
    setError(error => ({state: true, message: "Enter a valid ip address"}))
  }

  const closeAlertBox = () => {
    setError(error => ({...error, state: false}))
  }
  
  useEffect(() => {
    searchUserIPlocationData()
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Frontend Mentor | IP Address Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"></link>
      </Head>

      <main className={styles.main}>
        <AlertBox isOpen={error.state} onClick={closeAlertBox}>
          {[error.message].map(message => "" + message)}
        </AlertBox>
        
        <section className={styles.section_header}>
          <h1 className={styles.title}>IP Address Tracker</h1>
          <IPSearchbar handleEventSubmit={searchIPlocationData} handleEventError={showFormatError} />
          <IPInfos IPLocationData={IPLocationData} />
        </section>
        <section className={styles.section_map}>
          <IPLoaction position={IPLocationData.position} />
        </section>
      </main>
    </div>
  )
}
